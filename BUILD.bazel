load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")
load("@rules_proto//proto:defs.bzl", "proto_library")

# bazel run //:buildifier
# .. or warn
buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./bazel-*/*",
        "./.git/*",
    ],
    lint_mode = "fix",
)

# "-DWITH_FFMPEG=OFF" is for https://github.com/opencv/opencv/issues/22748
cmake(
    name = "opencv",
    cache_entries = select({
        "@platforms//os:linux": {
            "BUILD_LIST": "calib3d,core,features2d,highgui,imgcodecs,imgproc,video,videoio",
            "WITH_FFMPEG": "ON",
            "WITH_GTK": "OFF",
            "WITH_QT": "ON",
        },
        "@platforms//os:macos": {
            "BUILD_LIST": "calib3d,core,features2d,highgui,imgcodecs,imgproc,video,videoio",
            "WITH_FFMPEG": "ON",
            "WITH_GTK": "OFF",
            "WITH_QT": "OFF",
            "WITH_COCOA": "ON",
        },
    }),
    lib_source = "@opencv//:all",
    out_include_dir = "include/opencv4",
    out_shared_libs = select({
        "@platforms//os:linux": [
            "libopencv_calib3d.so.411",
            "libopencv_core.so.411",
            "libopencv_flann.so.411",
            "libopencv_features2d.so.411",
            "libopencv_highgui.so.411",
            "libopencv_imgcodecs.so.411",
            "libopencv_imgproc.so.411",
            "libopencv_video.so.411",
            "libopencv_videoio.so.411",
        ],
        "@platforms//os:macos": [
            "libopencv_calib3d.411.dylib",
            "libopencv_core.411.dylib",
            "libopencv_flann.411.dylib",
            "libopencv_features2d.411.dylib",
            "libopencv_highgui.411.dylib",
            "libopencv_imgcodecs.411.dylib",
            "libopencv_imgproc.411.dylib",
            "libopencv_video.411.dylib",
            "libopencv_videoio.411.dylib",
        ],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "image_processing_toolbox",
    srcs = ["image_processing_toolbox.cc"],
    hdrs = ["image_processing_toolbox.h"],
    data = ["//testdata"],
    deps = [
        ":opencv",
        "@absl//absl/status",
        "@absl//absl/strings",
    ],
)

cc_test(
    name = "image_processing_toolbox_test",
    srcs = ["image_processing_toolbox_test.cc"],
    data = ["//testdata"],
    deps = [
        ":image_processing_toolbox",
        "@absl//absl/status:status_matchers",
        "@bazel_tools//tools/cpp/runfiles",
        "@googletest//:gtest_main",
    ],
)

cc_binary(
    name = "image_toolbox_cli",
    srcs = ["image_toolbox_cli.cc"],
    data = ["//testdata"],
    deps = [
        ":image_processing_toolbox",
        "@absl//absl/flags:flag",
        "@absl//absl/flags:parse",
        "@absl//absl/status",
        "@gflags",
        "@glog",
    ],
)

proto_library(
    name = "calibration_data",
    srcs = ["calibration_data.proto"],
)

cc_proto_library(
    name = "calibration_data_cc",
    deps = [":calibration_data"],
)

cc_library(
    name = "caibrator",
    srcs = ["calibrator.cc"],
    hdrs = ["calibrator.h"],
    deps = [
        ":calibration_data_cc",
        "//:opencv",
        "@absl//absl/status",
        "@glog",
    ],
)

cc_test(
    name = "calibrator_test",
    srcs = ["calibrator_test.cc"],
    data = ["//testdata"],
    deps = [
        ":caibrator",
        "@absl//absl/status:status_matchers",
        "@bazel_tools//tools/cpp/runfiles",
        "@googletest//:gtest_main",
        "@protobuf-matchers//protobuf-matchers",
    ],
)

cc_binary(
    name = "calibrator_cli",
    srcs = ["calibrator_cli.cc"],
    data = ["//testdata"],
    deps = [
        ":caibrator",
        "@absl//absl/flags:flag",
        "@absl//absl/flags:parse",
        "@absl//absl/status",
        "@gflags",
        "@glog",
        "@status_macros",
    ],
)

cc_library(
    name = "reconstruction",
    srcs = ["reconstruction.cc"],
    hdrs = ["reconstruction.h"],
    deps = [
        ":calibration_data_cc",
        ":sfm",
        "//:opencv",
        "@absl//absl/status",
        "@absl//absl/status:statusor",
        "@absl//absl/strings",
        "@glog",
        "@status_macros",
    ],
)

cc_test(
    name = "reconstruction_test",
    srcs = ["reconstruction_test.cc"],
    data = ["//testdata"],
    deps = [
        ":calibration_data_cc",
        ":reconstruction",
        "@absl//absl/status:status_matchers",
        "@bazel_tools//tools/cpp/runfiles",
        "@googletest//:gtest_main",
        "@protobuf-matchers//protobuf-matchers",
    ],
)

cc_library(
    name = "sfm",
    srcs = ["sfm.cc"],
    hdrs = ["sfm.h"],
    deps = [
        ":calibration_data_cc",
        "@absl//absl/status",
        "@absl//absl/strings",
        "@glog",
    ],
)

cc_binary(
    name = "run_main",
    srcs = ["run_main.cc"],
    data = ["//testdata"],
    deps = [
        ":reconstruction",
        "@absl//absl/flags:flag",
        "@absl//absl/flags:parse",
        "@absl//absl/status",
        "@gflags",
        "@glog",
        "@status_macros",
    ],
)
#
#cc_library(
#    name = "slam",
#    srcs = ["slam.cc"],
#    hdrs = ["slam.h"],
#    deps = [
#        #        "//:opencv",
#        "@absl//absl/status",
#        "@absl//absl/strings",
#        "@glog",
#        "@status_macros",
#    ],
#)
